#ДЗ. Тема 7. Полезные инструменты. Обработка исключений.
#Решить с помощью генераторов списка.

import math

#1: Даны два списка фруктов. Получить список фруктов, присутствующих в обоих исходных списках.
#    Примечание: Списки фруктов создайте вручную в начале файла.

fruits_1 = ['яблоки', 'бананы', 'клубника', 'груши']
fruits_2 = ['яблоки', 'бананы', 'груши', 'персики', 'абрикосы', 'апельсины']

fruits_3 = [fruit for fruit in fruits_1 and fruits_2 if fruits_1.count(fruit) != 0 and fruits_2.count(fruit) != 0]

print(fruits_3)


#2: Дан список, заполненный произвольными числами. Получить список из элементов исходного,
# удовлетворяющих следующим условиям:
#Элемент кратен 3,
#Элемент положительный,
#Элемент не кратен 4.

#Примечание: Список с целыми числами создайте вручную в начале файла. Не забудьте включить туда отрицательные числа.
# 10-20 чисел в списке вполне достаточно.

number_list = [10, 11, 21, 33, 54, -9, 55, 60, 99, 100]

number_list_1 = [number for number in number_list if number>0]
print(number_list_1)

number_list_2 = [number for number in number_list if not (number % 3)]
print(number_list_2)

number_list_3 = [number for number in number_list if number % 4]
print(number_list_3)


#3. Напишите функцию которая принимает на вход список.
# Функция создает из этого списка новый список из квадратных корней чисел (если число положительное) и
# самих чисел (если число отрицательное) и возвращает результат (желательно применить генератор и
# тернарный оператор при необходимости). В результате работы функции исходный список не должен измениться.
#Например:
#old_list = [1, -3, 4]
#result = [1, -3, 2]

#    Примечание: Список с целыми числами создайте вручную в начале файла.
#    Не забудьте включить туда отрицательные числа. 10-20 чисел в списке вполне достаточно.

old_list = [1, -3, 4, -20, 40, -5, 4]

def list_sqrt (list_vh):
    result=list_vh[:]
    result = [math.sqrt(elem) for elem in list_vh if elem>0]
    return result

print(list_sqrt(old_list))

#4. Написать функцию которая принимает на вход число от 1 до 100. Если число равно 13,
# функция поднимает исключительную ситуации ValueError иначе возвращает введенное число, возведенное в квадрат.
#Далее написать основной код программы. Пользователь вводит число.
# Введенное число передаем параметром в написанную функцию и печатаем результат, который вернула функция.
# Обработать возможность возникновения исключительной ситуации, которая поднимается внутри функции.

def kvadrat (a):
    b=None
    try:
        if a==13:
            raise Exception('ValueError')
        else:
            b=a*a
    except ValueError:
        print('Значение 13 запрещено')
    finally:
        return b

c=int (input('Введите число'))
print(kvadrat (c))

